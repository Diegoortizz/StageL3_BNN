// var should = require('chai').should()
// expect = require('chai').expect;
// var jsbayes = require('../jsbayes');

var g = jsbayes.newGraph();


// définition des questions
// g.addNode(a, b) ; a = label | b = Liste des différentes 
var q1 = g.addNode('Q1', ['0', '1', '2', '3']);
var q2 = g.addNode('Q2', ['0', '1', '2', '3']);
var q3 = g.addNode('Q3', ['0', '1', '2', '3']);
var q4 = g.addNode('Q4', ['0', '1', '2', '3']);


// définition des savoirs

var C1_1 = g.addNode('C1_1', ['0', '1']);
var C2_1 = g.addNode('C2_1', ['0', '1']);
var M1_1 = g.addNode('M1_1', ['0', '1']);


// définition des compétences / SF

var C1 = g.addNode('C1', ['0', '1']);
var SF1 = g.addNode('SF1', ['0', '1']);


// définition des liens de parenté

C1.addParent(C1_1);
C1.addParent(C2_1);
C1.addParent(M1_1);

SF1.addParent(C2_1);

C1_1.addParent(q1);
C1_1.addParent(q3);
C1_1.addParent(q4);

C2_1.addParent(q2);
C2_1.addParent(q3);

M1_1.addParent(q3);


// // definition des CPT

q1.cpt = [0.25, 0.25, 0.25, 0.25];
q2.cpt = [0.25, 0.25, 0.25, 0.25];
q3.cpt = [0.25, 0.25, 0.25, 0.25];
q4.cpt = [0.25, 0.25, 0.25, 0.25];


M1_1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50]
]);

// Pour la cas C1_1, 3 parents (q1,q3,q4), la cardinalité de C1_1 = 2 (true ou false) => 2 COLONNES | Cardinalité des parents de C1_1, 4*4*4, donc 64 LIGNES

C1_1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50]
]);

C2_1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50]
]);

M1_1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50]
]);

SF1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50]
])


C1.setCpt([
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50],
    [0.50, 0.50]
]);





g.reinit()
    .then(function (r) {
        g.observe('Q1', '0');
        g.observe('Q2', '0');
        g.observe('Q3', '2');
        g.observe('Q4', '3');
        g.saveSamples = true;
        return g.sample(1000); //likelihood weight sampling aka the inference
    })
    .then(function (r) {
        console.log(g);
        console.log(g.samples)
        console.log(g.nodes[5].cpt);
    });